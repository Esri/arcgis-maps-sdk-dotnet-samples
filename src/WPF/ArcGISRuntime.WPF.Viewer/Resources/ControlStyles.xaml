<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="PrimaryColor" Color="#005e95"></SolidColorBrush>
    <SolidColorBrush x:Key="SecondaryColor" Color="#0079C1"></SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryBackgroundColor" Color="#f8f8f8"></SolidColorBrush>
    <SolidColorBrush x:Key="SecondaryBackgroundColor" Color="#D3CFCF"></SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryTextColor" Color="#323232"></SolidColorBrush>
    <SolidColorBrush x:Key="SecondaryTextColor" Color="#595959"></SolidColorBrush>
    <SolidColorBrush x:Key="OverlayColor" Color="#8C000000"></SolidColorBrush>
	
	<Style x:Key="HeaderToggleButtonStyle" TargetType="{x:Type RadioButton}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Foreground" Value="{StaticResource PrimaryTextColor}"/>
		<Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
		<Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
		<Setter Property="Padding" Value="5,6"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="MinHeight" Value="25"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid>
						<Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3"/>
						<Rectangle x:Name="DisabledVisualElement" Fill="{DynamicResource WhiteBrush}" IsHitTestVisible="False" Opacity="0" RadiusY="3" RadiusX="3"/>
						<TextBlock x:Name="contentPresenter" Text="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Foreground" TargetName="contentPresenter" Value="{StaticResource PrimaryColor}"/>
							<Setter Property="FontWeight" TargetName="contentPresenter" Value="Bold"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"/>
								<Condition Property="IsChecked" Value="False"/>
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" TargetName="contentPresenter" Value="{StaticResource PrimaryColor}"/>
						</MultiTrigger>
						<Trigger Property="IsKeyboardFocusWithin" Value="True">
							<Setter Property="BorderBrush" TargetName="Background" Value="{DynamicResource ButtonMouseOverBorderBrush}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.3"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="SampleHeaderToggleButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="{StaticResource PrimaryBackgroundColor}"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Foreground" Value="{StaticResource PrimaryTextColor}"/>
		<Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
		<Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="MinHeight" Value="25"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="auto"/>
							<RowDefinition Height="*"></RowDefinition>
						</Grid.RowDefinitions>
                        <Border Opacity="0" x:Name="TopBorder" Background="{StaticResource PrimaryColor}" BorderBrush="{StaticResource PrimaryColor}" BorderThickness="2"></Border>

						<Border x:Name="Background" 
								Grid.Row="1"
								BorderBrush="Transparent" 
								BorderThickness="0" 
								Background="Transparent" />
						
						<Rectangle x:Name="DisabledVisualElement" 
								Grid.Row="1"
								Fill="{DynamicResource WhiteBrush}" 
								IsHitTestVisible="False" 
								Opacity="0"/>
						
						<TextBlock x:Name="contentPresenter" 
								Margin="15, 4, 15, 7"
								Foreground="Black"
								FontSize="24"
								Text="{TemplateBinding Content}" 
								Grid.Row="1"
								HorizontalAlignment="Center" 
								VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Opacity" TargetName="TopBorder" Value="100"/>
                            <Setter Property="Background" TargetName="Background" Value="{StaticResource PrimaryBackgroundColor}"/>
                            <Setter Property="Foreground" TargetName="contentPresenter" Value="{StaticResource PrimaryColor}"/>
							<Setter Property="FontWeight" TargetName="contentPresenter" Value="SemiBold"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"/>
								<Condition Property="IsChecked" Value="False"/>
							</MultiTrigger.Conditions>
                            <Setter Property="Foreground" TargetName="contentPresenter" Value="{StaticResource PrimaryColor}"/>
						</MultiTrigger>
						<Trigger Property="IsKeyboardFocusWithin" Value="True">
							<Setter Property="BorderBrush" TargetName="Background" Value="{DynamicResource ButtonMouseOverBorderBrush}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.3"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type ListViewItem}">
		<Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="MinHeight" Value="25" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="Border.BorderBrush" Value="{DynamicResource GrayBrush1}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListViewItem}">
					<Border x:Name="Bd" BorderThickness="1" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Grid Margin="0,0,0,0">
							<GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
								<GridViewRowPresenter.Resources>
									<Style TargetType="{x:Type TextBlock}">
										<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=Foreground}" />
										<Style.Triggers>
											<DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}"
														 Value="True">
												<Setter Property="Foreground"
														Value="{DynamicResource AccentSelectedColorBrush}" />
											</DataTrigger>
											<DataTrigger Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"
														 Value="False">
												<Setter Property="Foreground" Value="{DynamicResource GrayNormalBrush}" />
											</DataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"
															   Value="False" />
													<Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}"
															   Value="True" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>
										</Style.Triggers>
									</Style>
								</GridViewRowPresenter.Resources>
							</GridViewRowPresenter>
                            
                            <ContentPresenter x:Name="contentPresenter"
											  Visibility="Collapsed" />
							<!--<Grid x:Name="borderTriangle" HorizontalAlignment="Right" VerticalAlignment="Top" Width="40" Height="40" Visibility="Collapsed">
								<Polygon Points="0,0 40,0 0,40 0,0" HorizontalAlignment="Right" Fill="{DynamicResource AccentColorBrush}" FlowDirection="RightToLeft"></Polygon>
							</Grid>-->
                            <Border x:Name="selectionBorder" BorderBrush="Transparent" BorderThickness="2" Width="4" HorizontalAlignment="Left"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
							<Setter TargetName="contentPresenter" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="#D1E9F9" />
                            <Setter Property="Foreground" Value="{StaticResource PrimaryColor}" />
                            <Setter Property="BorderBrush" TargetName="selectionBorder" Value="{StaticResource PrimaryColor}" />
                        </Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Bd" Property="Background" Value="{StaticResource PrimaryColor}" />
                            <Setter Property="Foreground" Value="{StaticResource PrimaryColor}" />
                        </Trigger>
						<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource PrimaryColor}" />
                            <Setter Property="Foreground" Value="{StaticResource PrimaryColor}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEnabled" Value="False" />
								<Condition Property="IsSelected" Value="True" />
							</MultiTrigger.Conditions>
							<MultiTrigger.Setters>
								<Setter TargetName="Bd" Property="Background" Value="{DynamicResource GrayBrush7}" />
							</MultiTrigger.Setters>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>